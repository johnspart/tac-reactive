/* Repositories and dependencies */
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'Sonatype Nexus Snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven {
            name = 'Gradle plugins'
            url = 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
        //classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:0.4.18'
    }
}

/* Plugins */
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: "jacoco"
apply plugin: 'org.flywaydb.flyway'
//apply plugin: 'jsonschema2pojo'

/* Project data */
group='co.s4n.reference.wlp'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral();
    maven {
        name = "Sonatype Nexus Releases"
        url = "http://oss.sonatype.org/content/repositories/releases"
    }
    maven {
        name = 'Sonatype Nexus Snapshots'
        url = 'http://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name = 'Sonatype Nexus releases Seven4n'
        url = 'http://nexus.seven4n.com/content/repositories/releases'
    }
    maven {
        name = "Sonatype Nexus Proteccion releases"
        url = "http://nexus.seven4n.com/content/repositories/proteccion-release/"
    }
    maven {
        name = "Sonatype Nexus Proteccion snapshots"
        url = "http://nexus.seven4n.com/content/repositories/proteccion-snapshots"
    }
}

dependencies {
    // Base
    compile 'com.ibm.mq:mqjms:7.5.0'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'javax.enterprise.concurrent:javax.enterprise.concurrent-api:1.0'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile 'javax:javaee-api:6.0'
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'javax.jms:javax.jms-api:2.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.4'
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'net.sf.dozer:dozer:5.5.1'
    compile 'org.jdbi:jdbi:2.72'
    compile 'joda-time:joda-time:2.9.3'
    compile 'com.google.guava:guava:19.0'
    compile 'com.google.inject:guice:4.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
    // Specific
    compile 'co.com.proteccion.advance:ms-base:0.1-SNAPSHOT'
    compile 'com.ibm.mq:mqjms:7.5.0'
    compile 'io.reactivex:rxjava:1.1.3'
    compile 'com.netflix.feign:feign-core:8.16.0'
    compile 'com.netflix.feign:feign-jackson:8.16.0'
    compile 'io.javaslang:javaslang:2.0.2'
    compile 'co.com.proteccion.advance.it:events-json:1.0.3-SNAPSHOT'
    compile 'co.com.proteccion.advance:mqclient:0.7-SNAPSHOT'
    // Testing
    testCompile 'junit:junit:4.12'
}

/* Test reports */
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

/* JaCoCo: Test coverage */
jacoco {
    toolVersion = "0.7.5.201505241946"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco"
    }
}

/*flyway {
    url = "${dbUrl}"
    user = "${dbUser}"
    password= "${dbPass}"
}*

/* Simple copy/paste of the war */
task localDeploy(type: Copy) {
    from "build/libs/${appName}"
    into "${deployPath}"
}
localDeploy.dependsOn war

/* JSON2Pojo */
/*
jsonSchema2Pojo {
  generateBuilders = false
  source = files("${sourceSets.main.output.resourcesDir}/json")
  targetDirectory = file("${project.buildDir}/generated-sources/js2p")
  targetPackage = 'co.s4n.reference.wlp'
  annotationStyle = 'jackson'
  sourceType = 'json'
  removeOldOutput = false
  outputEncoding = 'UTF-8'
  useJodaDates = false
}
*/